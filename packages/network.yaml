#-------------------------------------------
#  Network Related Packages
# @CCOSTAN
# Original Repo : https://github.com/CCOSTAN/Home-AssistantConfig
#-------------------------------------------

#-------------------------------------------
sensor:
  - platform: template
    sensors:
      network:
        # Make sure the State max length is 255 characters,
        friendly_name: 'Network Monitor'
        value_template: >
          {%- set domains = ['device_tracker'] -%}
          {%- for domain in domains -%}
            {%- for item in states[domain]
                if (item.attributes.source_type is defined and item.state != 'home' and item.attributes.friendly_name in
                [
                  "Hs-iMac.sanghvi.home",
                  "smartthings-hub.sanghvi.home",
                  "SpyCam.sanghvi.home",
                  "pi-one.sanghvi.home",
                  "pi-three-wifi.sanghvi.home"
                  ])
                  and(as_timestamp(now()) - as_timestamp(item.last_changed)) > 600 -%}
              {{ item.attributes.friendly_name }}
              {%- if not loop.last -%}
                {{'
                '}}
              {%- endif -%}
            {%- endfor -%}
          {%- endfor -%}

  - platform: template
    sensors:
      network_detail:
        friendly_name: 'Network Monitor Detail'
        value_template: >
          {%- set domains = ['device_tracker'] -%}
          {%- for domain in domains -%}
            {%- for item in states[domain]
                if (item.attributes.source_type is defined and item.state != 'home' and item.attributes.friendly_name in
                [
                  "Hs-iMac.sanghvi.home",
                  "smartthings-hub.sanghvi.home",
                  "SpyCam.sanghvi.home",
                  "pi-one.sanghvi.home",
                  "pi-three-wifi.sanghvi.home"
                  ])
                  and(as_timestamp(now()) - as_timestamp(item.last_changed)) > 600 -%}
              {{ item.attributes.friendly_name }} - {{((as_timestamp(now()) - as_timestamp(item.last_changed))/60) | round() }} minutes
              {%- if not loop.last -%}
                {{'
                '}}
              {%- endif -%}
            {%- endfor -%}
          {%- endfor -%}

#-------------------------------------------------------------------------------------
automation:
  - alias: 'Device Status'
    initial_state: 'on'
    hide_entity: True
    trigger:
      - platform: state
        entity_id:
          - sensor.network
          # - binary_sensor.carlowink

    condition:
      - condition: template
        value_template: >
          {% if not is_state('sensor.network_detail', ' ') %}
            false
          {% else %}
            true
          {% endif %}

    action:
      - service: script.notify_engine
        data_template:
          value1: 'Offline Devices:'
          value3: "{{ states.sensor.network_detail.state }}"
          who: 'harshit'

      # - service: script.speech_engine
      #   data_template:
      #     value1: "The following Devices are in an Offline state {{ trigger.to_state.state }}"
