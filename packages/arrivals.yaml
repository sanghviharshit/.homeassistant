#########################################################################
# Arrivals
#
#  Track individuals arriving at the house. We want to know when they
#  arrive, but only care about the first time, which is the initial
#  arrival after work.
#########################################################################

# Group arrival-related entities.
group:
  Arrivals:
    entities:
      - binary_sensor.heta_first_arrival
      - binary_sensor.harshit_first_arrival
      - sensor.latest_arrival
      - script.first_arrival_off

# Keep track of whether the first arrival has happened.
binary_sensor:
  - platform: mqtt
    name: "Heta First Arrival"
    state_topic: "home/first_arrival/heta"
  - platform: mqtt
    name: "Harshit First Arrival"
    state_topic: "home/first_arrival/harshit"

# Keep track of the person who most recently arrived.
sensor:
  - platform: mqtt
    name: "Latest Arrival"
    state_topic: "home/latest_arrival"

automation:
  # Set the most recent arrival.
  - alias: Set arrival
    trigger:
      platform: state
      entity_id:
        - device_tracker.harshits_iphone
        - device_tracker.hetas_iphone
      to: 'home'
    action:
      - service: mqtt.publish
        data_template:
          payload: '{{trigger.entity_id.split(".")[1].split("_")[0]}}'
          topic: 'home/latest_arrival'
          retain: true
  # Reset the first arrival daily.
  - alias: Reset first arrival
    trigger:
        platform: time
        at: '15:00:00'
    action:
      service: script.turn_on
      entity_id: script.first_arrival_off

script:
  # Reset the first arrival for all tracked individuals.
  first_arrival_off:
    sequence:
      - service: mqtt.publish
        data_template:
          topic: 'home/first_arrival/harshit'
          payload: 'OFF'
          retain: true
      - service: mqtt.publish
        data_template:
          topic: 'home/first_arrival/heta'
          payload: 'OFF'
          retain: true
