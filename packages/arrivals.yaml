#########################################################################
# Arrivals
#
#  Track individuals arriving at the house. We want to know when they
#  arrive, but only care about the first time, which is the initial
#  arrival after work.
#########################################################################

# Group arrival-related entities.
group:
  Arrivals:
    entities:
      - binary_sensor.heta_first_arrival
      - binary_sensor.harshit_first_arrival
      - sensor.latest_arrival
      - script.first_arrival_off

# Keep track of whether the first arrival has happened.
binary_sensor:
  - platform: mqtt
    name: "Heta First Arrival"
    state_topic: "home/first_arrival/heta"
  - platform: mqtt
    name: "Harshit First Arrival"
    state_topic: "home/first_arrival/harshit"

# Keep track of the person who most recently arrived.
sensor:
  - platform: mqtt
    name: "Latest Arrival"
    state_topic: "home/latest_arrival"

automation:
  # Set the most recent arrival.
  - alias: Set Latest Arrival
    trigger:
      platform: state
      entity_id:
        - device_tracker.harshits_iphone
        - device_tracker.hetas_iphone
      to: 'home'
    action:
      - service: mqtt.publish
        data_template:
          payload: '{{trigger.entity_id.split(".")[1].split("_")[0]}}'
          topic: 'home/latest_arrival'
          retain: true
  # Reset the first arrival daily.
  - alias: Reset first arrival
    trigger:
        platform: time
        at: '15:00:00'
    action:
      service: script.turn_on
      entity_id: script.first_arrival_off

script:
  # Reset the first arrival for all tracked individuals.
  first_arrival_off:
    sequence:
      - service: mqtt.publish
        data_template:
          topic: 'home/first_arrival/harshit'
          payload: 'OFF'
          retain: true
      - service: mqtt.publish
        data_template:
          topic: 'home/first_arrival/heta'
          payload: 'OFF'
          retain: true

  # - alias: 'Greetings on Arrival'
  #   trigger:
  #     - platform: mqtt
  #       topic: 'home/first_arrival/harshit'
  #       payload: 'on'
  #     - platform: mqtt
  #       topic: 'home/first_arrival/heta'
  #       payload: 'on'
  #     # - platform: state
  #     #   entity_id:
  #     #     - device_tracker.harshits_iphone
  #     #     - device_tracker.hetas_iphone
  #     #   from: 'not_home'
  #     #   to: 'home'
  #     #   # for: '00:01:00'
  #   condition:
  #     - condition: time
  #       after: '16:30:00'
  #       before: '01:00:00'
  #
  #   action:
  #     - wait_template: >-
  #         {{ not is_state('media_player.apple_tv_wired', 'playing') }}
  #       timeout: '00:01:00'
  #
  #     - service: script.speech_engine
  #       data_template:
  #         # {% set person = states[trigger.entity_id.split(".")[0]][trigger.entity_id.split(".")[1]].name%}
  #         personarriving: >
  #           {% set person = states.sensor.latest_arrival.state %}
  #           {%- macro greeting_sentence(person) -%}
  #           {{ [
  #           "Welcome back home " ~ person,
  #           "Guess who is home?" ~ person +" is!",
  #           person + " is now in the house.",
  #           "Welcome Home " ~ person + ".  We have missed you.",
  #           "Our home is now complete, Rest your head and relax your feet! Welcome Back " ~ person,
  #           "Life is like a song, youâ€™re back where you belong. Welcome home " ~ person,
  #           "Hey there " ~ person + " Welcome Home!",
  #           "Knock Knock. Who is There? "   ~ person +" is!",
  #           person ~ "! You are home!",
  #           "I know a secret! "  ~ person +" is home!"
  #           ] | random }}
  #           {%- endmacro -%}
  #           {{greeting_sentence(person)}}
  #         call_no_announcement: 1
  #
