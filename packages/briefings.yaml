#########################################################################
# Briefings
#
#  Briefings are short messages that relay timely information. They can
#  be played via TTS, sent in a text message, appear in the Home
#  Assistant UI, etc. Briefings can be context dependent. For example,
#  the time of day changes the type of information relayed, or the
#  message can be tailored for a specific person.
#########################################################################

homeassistant:
  customize:
    switch.briefings:
      icon: mdi:voice
    script.persistent_briefing:
      friendly_name: 'Persistent Briefing'

# Group various briefing-related entities.
group:
  Briefings:
    entities:
      - input_select.briefing_target
      - input_select.tts_engine
      - sensor.briefing_target
      - script.persistent_briefing
      - input_boolean.play_briefing

input_select:
  # Manual control for selecting briefing target.
  briefing_target:
    name: Briefing Target
    options:
      - 'Select a person'
      - !secret her_name
      - !secret his_name
    icon: mdi:bullseye-arrow

  # TODO Options for TTS engine (voice provider).
  tts_engine:
    name: TTS Engine
    options:
      - 'google'
      - 'amazon_polly'
      # - 'voicerss'

input_boolean:
  play_briefing:
    name: Play Briefing
    initial: off
    icon: mdi:voice

sensor:
  # Sensor that maintains the current briefing target.
  - platform: mqtt
    name: 'Briefing Target'
    state_topic: 'home/briefing_target'
    icon: mdi:bullseye

script:
  # Create a persistent notification with the briefing message.
  persistent_briefing:
    sequence:
      - service: persistent_notification.create
        data_template:
          notification_id: 'briefing'
          title: "{{states.sensor.briefing_target.state}}'s Briefing"
          message: !include ../templates/briefing.yaml

switch:
  # Enable or disable briefings entirely.
  - platform: mqtt
    name: Briefings
    state_topic: 'home/briefings'
    command_topic: 'home/briefings'
    qos: 1
    payload_on: 'on'
    payload_off: 'off'
    retain: true

automation:
  # Set a briefing target manually.
  - alias: Set Briefing Target
    initial_state: 'on'
    trigger:
      platform: state
      entity_id: input_select.briefing_target
    action:
      - service: mqtt.publish
        data_template:
          payload: "{{states.input_select.briefing_target.state}}"
          topic: 'home/briefing_target'
          retain: true
  # Play the evening briefing. Arrivals to the house are tracked,
  # so we can guess who is opening the door. When the door opens,
  # wait a few seconds and then play the targeted briefing over TTS.
  # This briefing plays after individuals get home from work.
  - alias: Play Evening Briefing
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: binary_sensor.main_door
        to: 'off'
    condition:
      # - condition: state
      #   entity_id: input_boolean.guest_mode
      #   state: 'off'
      - condition: state
        entity_id: group.family
        state: 'home'
      - condition: state
        entity_id: switch.briefings
        state: 'on'
      - condition: time
        after: '15:00:00'
        before: '23:30:00'
      # - condition: state
      #   entity_id: binary_sensor.workday_sensor
      #   state: 'on'
      - condition: template
        value_template: >
          {{states("binary_sensor." ~ states.sensor.latest_arrival.state ~ "_first_arrival") == "off"}}

    action:
      - service: mqtt.publish
        data_template:
          topic: 'home/first_arrival/{{states.sensor.latest_arrival.state}}'
          payload: 'ON'
          retain: true
      - service: mqtt.publish
        data_template:
          payload: >
            {{states.device_tracker["life360_" ~ states.sensor.latest_arrival.state].attributes.friendly_name}}
          topic: 'home/briefing_target'
          retain: true
      - delay:
          seconds: 5
      - service: script.speech_engine
        data_template:
          value1: !include ../templates/briefing.yaml

  - alias: Play Briefing Trigger
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: input_boolean.play_briefing
        to: 'on'
        from: 'off'
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.play_briefing
      - service: mqtt.publish
        data_template:
          payload: >
            {{states.device_tracker["life360_" ~ states.sensor.latest_arrival.state].attributes.friendly_name}}
          topic: 'home/briefing_target'
          retain: true
      - delay:
          seconds: 5
      - service: script.speech_engine
        data_template:
          value1: !include ../templates/briefing.yaml

    # TODO - Play the morning briefing. This briefing is triggered
    # when both phone's are unplugged from charger and it's after 8AM and someone is home
